project(vkd3d)
cmake_minimum_required(VERSION 3.25)

include(CheckCCompilerFlag)

set(CMAKE_C_STANDARD 99 )

find_program( CMAKE_WIDL NAMES widl )

if( NOT CMAKE_WIDL )
    message( FATAL_ERROR "widl not found" )
endif()

find_program(CMAKE_FLEX NAMES flex)
if(NOT CMAKE_FLEX)
    message(FATAL_ERROR "flex not found")
endif()

find_program(CMAKE_BISON NAMES bison)
if(NOT CMAKE_BISON)
    message(FATAL_ERROR "bison not found")
endif()

find_program(CMAKE_DOXYGEN NAMES doxygen)
if(NOT CMAKE_DOXYGEN)
    message(FATAL_ERROR "doxygen not found")
endif()

check_c_compiler_flag( "-Wall" HAS_WALL)
if(HAS_WALL)
    add_compile_options(-Wall)
elseif (NOT HAS_WALL)
    message(SEND_ERROR "Wall is required")
endif()

check_c_compiler_flag(-pipe HAS_PIPE)
if(HAS_PIPE)
    add_compile_options(-pipe)
elseif (NOT HAS_PIPE)
    message(SEND_ERROR "pipe is required")
endif()

check_c_compiler_flag(-std=c99 HAS_STD_C99)
if(HAS_STD_C99)
    add_compile_options(-std=c99)
elseif (NOT HAS_STD_C99)
    message(SEND_ERROR "std c99 is required")
endif()

check_c_compiler_flag(-fvisibility=hidden HAS_VISIBILITY_HIDDEN)
if(HAS_VISIBILITY_HIDDEN)
    add_compile_options(-fvisibility=hidden)
elseif (NOT HAS_VISIBILITY_HIDDEN)
    message(SEND_ERROR "visibility hidden is required")
endif()

check_c_compiler_flag(-Wdeclaration-after-statement HAS_DECLARATION_AFTER_STATEMENT)
if(HAS_DECLARATION_AFTER_STATEMENT)
    add_compile_options(-Wdeclaration-after-statement)
elseif (NOT HAS_DECLARATION_AFTER_STATEMENT)
    message(SEND_ERROR "declaration after statement is required")
endif()

check_c_compiler_flag(-Wimplicit-fallthrough HAS_IMPLICIT_FALLTHROUGH)
if(HAS_IMPLICIT_FALLTHROUGH)
    add_compile_options(-Wimplicit-fallthrough)
elseif (NOT HAS_IMPLICIT_FALLTHROUGH)
    message(SEND_ERROR "implicit fallthrough is required")
endif()

check_c_compiler_flag(-Winit-self HAS_INIT_SELF)
if(HAS_INIT_SELF)
    add_compile_options(-Winit-self)
elseif (NOT HAS_INIT_SELF)
    message(SEND_ERROR "init self is required")
endif()

check_c_compiler_flag(-Wmissing-prototypes HAS_MISSING_PROTOTYPES)
if(HAS_MISSING_PROTOTYPES)
    add_compile_options(-Wmissing-prototypes)
elseif (NOT HAS_MISSING_PROTOTYPES)
    message(SEND_ERROR "missing prototypes is required")
endif()

check_c_compiler_flag(-Wunused-but-set-parameter HAS_UNUSED_BUT_SET_PARAMETER)
if(HAS_UNUSED_BUT_SET_PARAMETER)
    add_compile_options(-Wunused-but-set-parameter)
elseif (NOT HAS_UNUSED_BUT_SET_PARAMETER)
    message(SEND_ERROR "unused but set parameter is required")
endif()

check_c_compiler_flag(-Wvla HAS_VLA)
if(HAS_VLA)
    add_compile_options(-Wvla)
elseif (NOT HAS_VLA)
    message(SEND_ERROR "vla is required")
endif()

check_c_compiler_flag(-Wpointer-arith HAS_POINTER_ARITH)
if(HAS_POINTER_ARITH)
    add_compile_options(-Wpointer-arith)
elseif (NOT HAS_POINTER_ARITH)
    message(SEND_ERROR "pointer arith is required")
endif()

check_c_compiler_flag(-Wl,--no-undefined HAS_NO_UNDEFINED)
if(HAS_NO_UNDEFINED)
    add_link_options(-Wl,--no-undefined)
elseif (NOT HAS_NO_UNDEFINED)
    message(SEND_ERROR "no undefined is required")
endif()
