project(vkd3d)
cmake_minimum_required(VERSION 3.25)

include(CheckCCompilerFlag)
include(CheckIncludeFile)
include(FindVulkan)

set_property(target vkd3d PROPERTY C_STANDARD 11 )

find_program( CMAKE_WIDL NAMES widl )

if( NOT CMAKE_WIDL )
    message( FATAL_ERROR "widl not found" )
endif()

find_package(Vulkan REQUIRED)

find_program(CMAKE_FLEX NAMES flex)
if(NOT CMAKE_FLEX)
    message(FATAL_ERROR "flex not found")
endif()

find_program(CMAKE_BISON NAMES bison)
if(NOT CMAKE_BISON)
    message(FATAL_ERROR "bison not found")
endif()

find_program(CMAKE_DOXYGEN NAMES doxygen)
if(NOT CMAKE_DOXYGEN)
    message(FATAL_ERROR "doxygen not found")
endif()

find_program(CMAKE_PERL NAMES perl)
if(NOT CMAKE_PERL)
    message(FATAL_ERROR "perl not found")
endif()

check_c_compiler_flag( "-Wall" HAS_WALL)
if(HAS_WALL)
    add_compile_options(-Wall)
elseif (NOT HAS_WALL)
    message(SEND_ERROR "Wall is required")
endif()

check_c_compiler_flag(-pipe HAS_PIPE)
if(HAS_PIPE)
    add_compile_options(-pipe)
elseif (NOT HAS_PIPE)
    message(SEND_ERROR "pipe is required")
endif()

check_c_compiler_flag(-std=c11 HAS_STD_C11)
if(HAS_STD_C11)
    add_compile_options(-std=c11)
elseif (NOT HAS_STD_C11)
    message(SEND_ERROR "std c11 is required")
endif()

check_c_compiler_flag(-fvisibility=hidden HAS_VISIBILITY_HIDDEN)
if(HAS_VISIBILITY_HIDDEN)
    add_compile_options(-fvisibility=hidden)
elseif (NOT HAS_VISIBILITY_HIDDEN)
    message(SEND_ERROR "visibility hidden is required")
endif()

check_c_compiler_flag(-g   HAS_G)
if(HAS_G)
    add_compile_options(-g)
elseif (NOT HAS_G)
    message(SEND_ERROR "g is required")
endif()

check_c_compiler_flag(-Wdeclaration-after-statement HAS_DECLARATION_AFTER_STATEMENT)
if(HAS_DECLARATION_AFTER_STATEMENT)
    add_compile_options(-Wdeclaration-after-statement)
elseif (NOT HAS_DECLARATION_AFTER_STATEMENT)
    message(SEND_ERROR "declaration after statement is required")
endif()

check_c_compiler_flag(-Wimplicit-fallthrough HAS_IMPLICIT_FALLTHROUGH)
if(HAS_IMPLICIT_FALLTHROUGH)
    add_compile_options(-Wimplicit-fallthrough)
elseif (NOT HAS_IMPLICIT_FALLTHROUGH)
    message(SEND_ERROR "implicit fallthrough is required")
endif()

check_c_compiler_flag(-Winit-self HAS_INIT_SELF)
if(HAS_INIT_SELF)
    add_compile_options(-Winit-self)
elseif (NOT HAS_INIT_SELF)
    message(SEND_ERROR "init self is required")
endif()

check_c_compiler_flag(-Wmissing-prototypes HAS_MISSING_PROTOTYPES)
if(HAS_MISSING_PROTOTYPES)
    add_compile_options(-Wmissing-prototypes)
elseif (NOT HAS_MISSING_PROTOTYPES)
    message(SEND_ERROR "missing prototypes is required")
endif()

check_c_compiler_flag(-Wunused-but-set-parameter HAS_UNUSED_BUT_SET_PARAMETER)
if(HAS_UNUSED_BUT_SET_PARAMETER)
    add_compile_options(-Wunused-but-set-parameter)
elseif (NOT HAS_UNUSED_BUT_SET_PARAMETER)
    message(SEND_ERROR "unused but set parameter is required")
endif()

check_c_compiler_flag(-Wvla HAS_VLA)
if(HAS_VLA)
    add_compile_options(-Wvla)
elseif (NOT HAS_VLA)
    message(SEND_ERROR "vla is required")
endif()

check_c_compiler_flag(-Wpointer-arith HAS_POINTER_ARITH)
if(HAS_POINTER_ARITH)
    add_compile_options(-Wpointer-arith)
elseif (NOT HAS_POINTER_ARITH)
    message(SEND_ERROR "pointer arith is required")
endif()

check_c_compiler_flag(-Wl,--no-undefined HAS_NO_UNDEFINED)
if(HAS_NO_UNDEFINED)
    add_link_options(-Wl,--no-undefined)
elseif (NOT HAS_NO_UNDEFINED)
    message(SEND_ERROR "no undefined is required")
endif()

# check for include files
check_include_file("stdio.h" HAVE_STDIO_H)
check_include_file("stdlib.h" HAVE_STDLIB_H)
check_include_file("string.h" HAVE_STRING_H)
check_include_file("inittypes.h" HAVE_INITTYPES_H)
check_include_file("stdint.h" HAVE_STDINT_H)
check_include_file("strings.h" HAVE_STRINGS_H)
check_include_file("sys/stat.h" HAVE_SYS_STAT_H)
check_include_file("sys/types.h" HAVE_SYS_TYPES_H)
check_include_file("unistd.h" HAVE_UNISTD_H)
check_include_file("wchar.h" HAVE_WCHAR_H)
check_include_file("minix/config.h" HAVE_MINIX_CONFIG_H)
check_include_file("dlfcn.h" HAVE_DLFCN_H)
check_include_file("vulkan/vulkan.h" HAVE_VULKAN_H)
check_include_file("xcb/xcb.h" HAVE_XCB_XCB_H)
check_include_file("pthread.h" HAVE_PTHREAD_H)
check_include_file("vulkan/spirv.h" HAVE_VULKAN_SPIRV_H)
check_include_file("vulkan/unified1/GLSL.std.450.h" HAVE_VULKAN_UNIFIED1_GLSL_STD_450_H)
check_include_file("spirv/unified1/GLSL.std.450.h" HAVE_SPIRV_UNIFIED1_GLSL_STD_450_H)
check_include_file("spirv/unified1/spirv.h" HAVE_SPIRV_UNIFIED1_SPIRV_H)

